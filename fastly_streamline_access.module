<?php

require_once(__DIR__ . "/src/FsaComms.php");
require_once(__DIR__ . "/src/FsaFastly.php");
require_once(__DIR__ . "/src/FsaFastlyDrupalUtilities.php");

use \Drupal\fastly_streamline_access\FsaFastlyDrupalUtilities;
use \Drupal\fastly_streamline_access\FsaFastly;

const FSA_ACCESS_PERMISSION = 'access protected lagoon routes';

/**
 * Implements hook_permission()
 */
function fastly_streamline_access_permission() {
  return [
    FSA_ACCESS_PERMISSION => [
      'title' => t('Access protected Lagoon routes'),
      'description' => t(
        'Allows access to all routes protected by Lagoon/Fastly via IP'
      )
    ]
  ];
}

/**
 * Implements hook_requirements()
 */
function fastly_streamline_access_requirements($phase) {
  if ($phase == "runtime") {
  }
}

/**
 * Implements hook_menu()
 */
function fastly_streamline_access_menu() {
  $items = [];

  $items['admin/config/fastly_streamline_access'] = [
    'title' => 'Fastly Streamline Access Administration',
    'description' => 'Configuration for FSA',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['fastly_streamline_access_setting_form'],
    'access arguments' => ['access administration pages'],
    'type' => MENU_NORMAL_ITEM,
  ];

  return $items;
}

function fastly_streamline_access_get_FSA_paths() {
  return implode(
    PHP_EOL,
    [
      "user",
      "user/*",
    ]
  );
}

function fastly_streamline_access_register_current_ip() {
  global $user;
  if (user_access(FSA_ACCESS_PERMISSION)) {
    try {
      $ip_address = ip_address();
      if (!empty($_SERVER['TRUE_CLIENT_IP'])) {
        $ip_address = $_SERVER['TRUE_CLIENT_IP'];
      }
      $service_id = FsaFastlyDrupalUtilities::getServiceId();
      $service_key = FsaFastlyDrupalUtilities::getApiKey();
      $fsa_instance = FsaFastly::GetFsaFastlyInstance(
        $service_key,
        $service_id
      );
      $acl = $fsa_instance->getAclByName(variable_get('fsa_acl_name'));
      $fsa_instance->addAclMember(
        $acl->id,
        $ip_address,
        [
          'user' => $user->name,
          'site' => variable_get('site_name')
        ]
      );
    } catch (\Exception $ex) {
      watchdog(
        "fastly_streamline_access",
        "Error registering FSA ACL entry: " . $ex->getMessage(),
        [],
        WATCHDOG_ALERT
      );
    }
  }
}

/**
 * Implements hook_init()
 */
function fastly_streamline_access_init() {
  $path = current_path();
  if (user_is_logged_in()
    && drupal_match_path($path, fastly_streamline_access_get_FSA_paths())) {
    fastly_streamline_access_register_current_ip();
  }
}

/**
 * Administration form.
 */
function fastly_streamline_access_setting_form($form, &$form_state) {
  $form['fsa_acl_name'] = [
    '#type' => 'textfield',
    '#title' => t('Standard Access Control List (ACL) name:'),
    '#default_value' => variable_get('fsa_acl_name'),
    '#description' => t(
      'This will determine the ACL names used on Fastly'
    ),
  ];

  // Page title field.
  $form['fsa_acl_long_name'] = [
    '#type' => 'textfield',
    '#title' => t('Long lived Access Control List (ACL) name:'),
    '#default_value' => variable_get('fsa_acl_long_name'),
    '#description' => t(
      'This will determine the ACL names used on Fastly'
    ),
  ];

  $form['passphrase_fieldset'] = [
    '#type' => 'fieldset',
    '#title' => t('Passphrase'),
    '#collapsible' => TRUE,
    '#collapsed' => !empty(variable_get('fsa_passphrase')),
  ];

  if (!empty(variable_get('fsa_passphrase'))) {
    $form['passphrase_fieldset']['fsa_override_passphrase'] = [
      '#type' => 'checkbox',
      '#title' => t('Override passphrase:'),
      '#default_value' => empty(variable_get('fsa_passphrase')),
      '#description' => t(
        'The passphrase is currently set - check here to override it'
      ),
    ];
  }

  // Page title field.
  $form['passphrase_fieldset']['fsa_passphrase'] = [
    '#type' => 'password',
    '#title' => t('Api Pass phrase:'),
    '#default_value' => variable_get('fsa_passphrase'),
    '#description' => t(
      'This is the pass phrase used to decrypt the fastly API key'
    ),
  ];

  $form['submit_button'] = [
    '#type' => 'submit',
    '#value' => t('Save'),
  ];

  return $form;
}


function fastly_streamline_access_setting_validate($form, &$form_state) {
}

function fastly_streamline_access_setting_form_submit($form, &$form_state) {
  variable_set("fsa_acl_name", $form_state['values']['fsa_acl_name']);
  variable_set("fsa_acl_long_name", $form_state['values']['fsa_acl_long_name']);

  if (isset($form_state['values']['fsa_override_passphrase']) && $form_state['values']['fsa_override_passphrase'] == 1) {
    variable_set("fsa_passphrase", $form_state['values']['fsa_passphrase']);
    drupal_set_message("Set passphrase");
  }
  drupal_set_message("Saved configuration");
}
